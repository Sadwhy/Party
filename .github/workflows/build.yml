name: Build APK and Notify Discord

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17
        cache: gradle

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew assembleRelease

    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"

    - name: shit
      run: |
       cd app/build/outputs/apk/release
       ls

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
          name: Party
          path: "app/build/outputs/apk/release/app-release-signed.apk"

    - name: Upload APK to Telegram
      shell: bash
      env:
        BOT_ID: ${{ secrets.TELEGRAM_BOT_ID }}
        CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
      run: |
        COMMES=$(git log -1 --pretty=format:%s)
        SHA=$(git rev-parse --short HEAD)
    
        curl -s -X POST "https://api.telegram.org/bot${BOT_ID}/sendDocument" \
          -F chat_id="${CHANNEL_ID}" \
          -F document="@app/build/outputs/apk/release/app-release-signed.apk" \
          -F caption="${COMMES} - ${SHA}" \
          -F parse_mode=Markdown

    - name: Delete Old Pre-Releases
      id: delete-pre-releases
      uses: sgpublic/delete-release-action@master
      with:
        pre-release-drop: true
        pre-release-keep-count: 3
        pre-release-drop-tag: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
