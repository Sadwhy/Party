name: compile and upload

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/.github/workflows/lint.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set environment variables
      run: |
        echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "COMMES=$(git log -1 --pretty=format:%s)" >> $GITHUB_ENV
        if [[ $(git log -1 --pretty=format:%s) == *release* ]]; then
          echo "BUILD_TYPE=Release" >> $GITHUB_ENV
          echo "BUILD_PATH=release-unsigned" >> $GITHUB_ENV
        else
          echo "BUILD_TYPE=Debug" >> $GITHUB_ENV
          echo "BUILD_PATH=debug" >> $GITHUB_ENV
        fi

    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17
        cache: gradle

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 35
        build-tools: 34.0.0
        ndk-version: 28.1.13356709
        cmake-version: 3.22.1

    - name: Accept Android SDK licenses
      run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Install additional Android SDK components
      run: |
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" \
                   "build-tools;34.0.0" \
                   "platforms;android-35" \
                   "ndk;28.1.13356709" \
                   "cmake;3.22.1"

    - name: Set NDK environment variable
      run: |
        echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/28.1.13356709" >> $GITHUB_ENV
        echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/28.1.13356709" >> $GITHUB_ENV

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew assemble${BUILD_TYPE}

    - name: Move app
      run: |
        mv app/build/outputs/apk/${BUILD_TYPE,,}/app-${BUILD_PATH,,}.apk app/build/$SHA.apk

    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build
        signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Party
        path: app/build/$SHA-signed.apk

    - name: Upload APK to Telegram
      shell: bash
      env:
        BOT_ID: ${{ secrets.TELEGRAM_BOT_ID }}
        CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
      run: |
        curl -s -X POST "https://api.telegram.org/bot${BOT_ID}/sendDocument" \
          -F chat_id="${CHANNEL_ID}" \
          -F document="@app/build/$SHA-signed.apk" \
          -F caption="$COMMES - $SHA"

    - name: Delete Old Pre-Releases
      id: delete-pre-releases
      uses: sgpublic/delete-release-action@master
      with:
        pre-release-drop: true
        pre-release-keep-count: 3
        pre-release-drop-tag: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}