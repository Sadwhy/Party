name: Build APK and Notify Discord

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17
        cache: gradle

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew assembleDebug

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
          name: Party
          path: "app/build/outputs/apk/debug/app-debug.apk"   

    - name: Upload APK to Telegram
      shell: bash
      env:
        BOT_ID: ${{ secrets.TELEGRAM_BOT_ID }}
        CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
      run: |
        # Get the commit message and short SHA
        COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
        SHORT_SHA=$(git rev-parse --short HEAD)
    
        # Escape MarkdownV2 special characters in both
        ESCAPED_MESSAGE=$(printf "%s" "$COMMIT_MESSAGE" \
          | sed 's/[][_*()~`>#+\-=|{}.!]/\\&/g')
        ESCAPED_SHA=$(printf "%s" "$SHORT_SHA" \
          | sed 's/[][_*()~`>#+\-=|{}.!]/\\&/g')
    
        # Build the caption
        CAPTION="${ESCAPED_MESSAGE} - \`${ESCAPED_SHA}\`"
    
        # Upload to Telegram
        curl -s -X POST "https://api.telegram.org/bot${BOT_ID}/sendDocument" \
          -F chat_id="${CHANNEL_ID}" \
          -F document="@app/build/outputs/apk/debug/app-debug.apk" \
          -F caption="${CAPTION}" \
          -F parse_mode=MarkdownV2

    - name: Delete Old Pre-Releases
      id: delete-pre-releases
      uses: sgpublic/delete-release-action@master
      with:
        pre-release-drop: true
        pre-release-keep-count: 3
        pre-release-drop-tag: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
